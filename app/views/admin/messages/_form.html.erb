<%#
# Form Partial

This partial is rendered on a resource's `new` and `edit` pages,
and renders all form fields for a resource's editable attributes.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Form][1].
  Contains helper methods to display a form,
  and knows which attributes should be displayed in the resource's form.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Form
%>

<%= form_for([namespace, page.resource], html: { class: "form message", multipart: true }) do |f| %>
  <script>
    // jQuery(function() {
    //   const $form = jQuery("#edit_message_<%= page.resource.id %>");
    //   const $firstTextarea = $form.find("textarea").first();
    //   if($form.find("img").length > 0) {
    //     $firstTextarea.attr("maxlength", 200);
    //   }
    //   $form.find('#message_image').change(function(){
    //     $firstTextarea.attr("maxlength", this.val() ? 200 : 4096);
    //   });
    // });
    document.addEventListener('DOMContentLoaded', function(){
      const form = document.querySelector("<%= page.resource.id.present? ? "#edit_message_#{page.resource.id}" : "#new_message" %>");
      const firstTextarea = form.querySelector("textarea");
      const imageInput = form.querySelector('#message_image');
      if(imageInput.files && imageInput.files.length > 0) {
        firstTextarea.setAttribute("maxlength", 200);
      }
      imageInput.addEventListener('change', function(){
        firstTextarea.setAttribute("maxlength", (this.files && this.files.length > 0) ? 200 : 4096);
      });
    })
  </script>
  <% if page.resource.errors.any? %>
    <div id="error_explanation">
      <h2>
        <%= t(
          "administrate.form.errors",
          pluralized_errors: pluralize(page.resource.errors.count, t("administrate.form.error")),
          resource_name: display_resource_name(page.resource_name).singularize
        ) %>
      </h2>

      <ul>
        <% page.resource.errors.full_messages.each do |message| %>
          <li class="flash-error"><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <% page.attributes.each do |attribute| -%>
    <div class="field-unit field-unit--<%= attribute.html_class %> field-unit--<%= requireness(attribute) %>">
      <%= render_field attribute, f: f %>
    </div>
  <% end -%>

  <div class="form-actions">
    <%= f.submit %>
  </div>
<% end %>
